Course ID,Course Title,Course Description,Upper Div,keywords
ECS 011, Artificial Intelligence for All," Comprehensive introduction to artificial intelligence (AI) and its multifaceted applications. Foundational understanding of modern AI to enable effective communication about its functions, recognition of its applications, and awareness of its core principles. Ethical and societal implications of AI.",False,"['ai', 'intelligence', 'ethical', 'awareness', 'introduction', 'artificial', 'communication', 'comprehensive', 'recognition', 'applications']"
ECS 012, Introduction to Media Computation, Introduction to key computational ideas necessary to understand and produce digital media. Fundamentals of programming are covered as well as analysis of how media are represented and transmitted in digital form. Aimed primarily at non-computer science students.,False,"['programming', 'computational', 'digital', 'media', 'fundamentals', 'introduction', 'students', 'analysis', 'science', 'represented']"
ECS 017," Data, Logic, & Computing"," Display, processing, and representation of information and data on a computer. Understanding and analyzing the digital representations of numbers, images, and sounds. Basic computer operations and their logic. Introduction to discrete mathematics in computer science, including propositional logic, proofs by induction, recursions, and counting. Introduction to algorithms. Uses of computers and their influence on society.",False,"['computers', 'algorithms', 'mathematics', 'processing', 'numbers', 'digital', 'operations', 'analyzing', 'images', 'data']"
ECS 020, Discrete Mathematics For Computer Science," Discrete mathematics of particular utility to computer science. Proofs by induction. Propositional and first-order logic. Sets, functions, and relations. Big-O and related notations. Recursion and solutions of recurrence relations. Combinatorics. Probability on finite probability spaces. Graph theory.",False,"['mathematics', 'discrete', 'combinatorics', 'recursion', 'induction', 'utility', 'sets', 'theory', 'relations', 'graph']"
ECS 032A, Introduction to Programming, Introduction to programming and problem solving in Python. Aimed primarily at non-major students.,False,"['python', 'programming', 'students', 'introduction', 'solving', 'major', 'problem', 'at', 'in', 'and']"
ECS 032AV, Introduction to Programming, Introduction to programming and problem solving in Python. Aimed primarily at non-major students.,False,"['python', 'programming', 'students', 'introduction', 'solving', 'major', 'problem', 'at', 'in', 'and']"
ECS 032B, Introduction to Data Structures," Design and analysis of data structures using Python; trees, heaps, searching, sorting, and graphs.",False,"['heaps', 'python', 'structures', 'graphs', 'trees', 'sorting', 'data', 'searching', 'analysis', 'design']"
ECS 032C, Implementation of Data Structures in C, Programming in the C language. Use of basic UNIX tools. Writing good programs of increased complexity and efficiency. Implementation of data structures in C.,False,"['programming', 'unix', 'programs', 'implementation', 'basic', 'structures', 'language', 'tools', 'data', 'complexity']"
ECS 034, Software Development in UNIX & C++, UNIX Operating system tools and programming environment. Methods for debugging and verification. Principles object-oriented programming in C++.,False,"['unix', 'debugging', 'programming', 'tools', 'operating', 'system', 'environment', 'verification', 'methods', 'principles']"
ECS 036A, Programming & Problem Solving," Computers and computer programming for students with some prior experience, algorithm design, and debugging. Good programming style. Use of basic UNIX tools.",False,"['programming', 'unix', 'computers', 'debugging', 'basic', 'students', 'tools', 'algorithm', 'design', 'experience']"
ECS 036B, Software Development & Object-Oriented Programming in C++, Object-oriented programming in C++. Basic data structures and their use. Writing good programs of increased complexity and efficiency. Methods for debugging and verification.,False,"['programming', 'debugging', 'programs', 'basic', 'structures', 'object', 'complexity', 'methods', 'oriented', 'data']"
ECS 036C," Data Structures, Algorithms, & Programming"," Design and analysis of data structures for a variety of applications; trees, heaps, searching, sorting, hashing, and graphs. Extensive programming.",False,"['hashing', 'heaps', 'structures', 'sorting', 'data', 'searching', 'graphs', 'trees', 'programming', 'applications']"
ECS 050, Computer Organization & Machine-Dependent Programming, Comparative study of different hardware architectures via programming in the assembly languages of various machines. Role of system software in producing an abstract machine. Introduction to I/O devices and programming.,False,"['hardware', 'architectures', 'programming', 'machines', 'assembly', 'software', 'machine', 'languages', 'system', 'abstract']"
ECS 088, Ethics of Technology," Foundations of normative ethics for technology, its relationships to moral philosophy and to the law. Technologies and their impacts on the environment and society. Justice, meritocracy, and computer science and engineering. Ethical issues with AI and machine learning.",False,"['ethical', 'ethics', 'technologies', 'technology', 'moral', 'normative', 'philosophy', 'ai', 'engineering', 'society']"
ECS 089A, Special Topics in Computer Science: Computer Science Theory, Special topics in Computer Science Theory.,False,"['topics', 'theory', 'science', 'special', 'in']"
ECS 089B, Special Topics in Computer Science: Architecture, Special topics in Architecture.,False,"['architecture', 'topics', 'special', 'in']"
ECS 089C, Special Topics in Computer Science: Programming Languages & Compilers, Special topics in Programming Languages & Compilers.,False,"['compilers', 'programming', 'topics', 'languages', 'special', 'in']"
ECS 089D, Special Topics in Computer Science: Operating Systems, Special topics in Operating Systems.,False,"['operating', 'systems', 'topics', 'special', 'in']"
ECS 089E, Special Topics in Computer Science: Software Engineering, Special topics in Software Engineering.,False,"['topics', 'software', 'engineering', 'special', 'in']"
ECS 089F, Special Topics in Computer Science: Databases, Special topics in Databases.,False,"['databases', 'topics', 'special', 'in']"
ECS 089G, Special Topics in Computer Science: Artificial Intelligence, Special topics in Artificial Intelligence.,False,"['topics', 'intelligence', 'artificial', 'special', 'in']"
ECS 089H, Special Topics in Computer Science: Computer Graphics, Special topics in Computer Graphics.,False,"['graphics', 'topics', 'special', 'in']"
ECS 089I, Special Topics in Computer Science: Networks, Special topics in Networks.,False,"['networks', 'topics', 'special', 'in']"
ECS 089J, Special Topics in Computer Science: Computer-Aided Design, Special topics in Computer-Aided Design.,False,"['design', 'topics', 'aided', 'special', 'in']"
ECS 089K, Special Topics in Computer Science: Scientific Computing, Special topics in Scientific Computing.,False,"['computing', 'topics', 'scientific', 'special', 'in']"
ECS 089L, Special Topics in Computer Science: Computer Science, Special topics in Computer Science.,False,"['topics', 'science', 'special', 'in']"
ECS 092, Internship in Computer Science, Supervised work experience in computer science.,False,"['supervised', 'experience', 'work', 'science', 'in']"
ECS 098, Directed Group Study, Directed group study.,False,"['group', 'study', 'directed']"
ECS 098F, Student Facilitated Course, Student facilitated course intended primarily for lower division students.,False,"['students', 'facilitated', 'division', 'primarily', 'course', 'lower', 'for', 'intended']"
ECS 099, Special Study for Lower Division Students, Special study for lower division students.,False,"['study', 'students', 'division', 'special', 'lower', 'for']"
ECS 111, Applied Machine Learning for Non-Majors," Machine learning methods and their application. Theory, design and evaluation of supervised/unsupervised machine learning algorithms. Practical use of matching learning methods and their challenges.",True,"['supervised', 'matching', 'algorithms', 'learning', 'unsupervised', 'machine', 'application', 'theory', 'methods', 'challenges']"
ECS 113, Computer Security for Non-Majors," Principles, mechanisms, implementation, and sound practices of computer security and data protection. Cryptography, authentication and access control. Internet security. Malicious software. Common vulnerabilities. Practical security in everyday life. Not intended for Computer Science or Computer Science & Engineering majors.",True,"['security', 'vulnerabilities', 'authentication', 'cryptography', 'protection', 'principles', 'malicious', 'practices', 'implementation', 'software']"
ECS 115, Computer Networks for Non-Majors," Overview of computer networks, World Wide Web, email, local & wide-area computer networks, TCP/IP protocol suite, network protocols for data transmission, introduction to network programming.",True,"['tcp', 'protocols', 'protocol', 'ip', 'network', 'web', 'networks', 'overview', 'programming', 'introduction']"
ECS 116, Databases for Non-Majors," Overview of Database Systems, Conceptual Modeling and Design, E/R diagrams, Relational Model, Relational Algebra, SQL, File and Index Structures, Query Evaluation, Transaction Concepts, Concurrency and Recovery, and NoSQL Databases.",True,"['databases', 'database', 'nosql', 'relational', 'sql', 'concurrency', 'diagrams', 'overview', 'transaction', 'systems']"
ECS 117, Algorithms for Data Science," Algorithms for searching, pattern matching, combinatorial problems, clustering, and time series analysis with practical emphasis.",True,"['algorithms', 'clustering', 'searching', 'matching', 'pattern', 'analysis', 'combinatorial', 'series', 'problems', 'time']"
ECS 119, Data Processing Pipelines," Introduction to software systems for processing large datasets. Hands-on experience with scripting, data streams, distributed computing, and software development and deployment infrastructure.",True,"['datasets', 'software', 'streams', 'scripting', 'processing', 'distributed', 'computing', 'data', 'infrastructure', 'systems']"
ECS 120, Theory of Computation," Fundamental ideas in the theory of computation, including formal languages, computability and complexity. Reducibility among computational problems.",True,"['computability', 'computational', 'complexity', 'reducibility', 'computation', 'theory', 'languages', 'formal', 'fundamental', 'problems']"
ECS 122A, Algorithm Design & Analysis," Complexity of algorithms, bounds on complexity, analysis methods. Searching, sorting, pattern matching, graph algorithms. Algorithm design techniques: divide-conquer, greedy, dynamic programming. Approximation methods. NP-complete problems.",True,"['algorithms', 'algorithm', 'complexity', 'graph', 'sorting', 'searching', 'programming', 'matching', 'pattern', 'methods']"
ECS 122B, Algorithm Design & Analysis," Theory and practice of hard problems, and problems with complex algorithm solutions. NP-completeness, approximation algorithms, randomized algorithms, dynamic programming and branch and bound. Theoretical analysis, implementation and practical evaluations. Examples from parallel, string, graph, and geometric algorithms.",True,"['algorithms', 'algorithm', 'implementation', 'complex', 'geometric', 'programming', 'randomized', 'graph', 'parallel', 'problems']"
ECS 124, Theory & Practice of Bioinformatics," Fundamental biological, mathematical and algorithmic models underlying bioinformatics and systems biology; sequence analysis, database search, genome annotation, clustering and classification, functional gene networks, regulatory network inference, phylogenetic trees, applications of common bioinformatics tools in molecular biology and genetics.",True,"['bioinformatics', 'phylogenetic', 'genome', 'gene', 'biology', 'biological', 'clustering', 'molecular', 'genetics', 'algorithmic']"
ECS 127, Cryptography," Introduction to the theory and practice of cryptographic techniques used in computer security. Encryption (secret-key and public-key), message authentication, digital signatures, entity authentication, key distribution, and other cryptographic protocols. The social context of cryptography.",True,"['cryptography', 'cryptographic', 'encryption', 'authentication', 'security', 'signatures', 'protocols', 'introduction', 'techniques', 'theory']"
ECS 129, Computational Structural Bioinformatics," Fundamental biological, chemical and algorithmic models underlying computational structural biology; protein structure and nucleic acids structure; comparison of protein structures; protein structure prediction; molecular simulations; databases and online services in computational structural biology.",True,"['molecular', 'protein', 'structures', 'structure', 'structural', 'computational', 'nucleic', 'biology', 'biological', 'databases']"
ECS 130, Scientific Computation," Matrix-vector approach using MATLAB for floating-point arithmetic, error analysis, data interpolation, least squares data fitting, quadrature, zeros, optimization and matrix eigenvalues and singular values. Parallel computing for matrix operations and essential matrix factorizations.",True,"['matlab', 'matrix', 'vector', 'computing', 'interpolation', 'quadrature', 'parallel', 'optimization', 'factorizations', 'eigenvalues']"
ECS 132, Probability & Statistical Modeling for Computer Science," Univariate and multivariate distributions. Estimation and model building. Markov/Hidden Markov models. Applications to data mining, networks, security, software engineering and bioinformatics.",True,"['bioinformatics', 'multivariate', 'univariate', 'markov', 'distributions', 'models', 'software', 'applications', 'estimation', 'data']"
ECS 140A, Programming Languages," Syntactic definition of programming languages. Introduction to programming language features including variables, data types, data abstraction, object-orientedness, scoping, parameter disciplines, exception handling. Non-imperative programming languages. Comparative study of several high-level programming languages.",True,"['programming', 'syntactic', 'languages', 'language', 'abstraction', 'definition', 'variables', 'scoping', 'imperative', 'types']"
ECS 140B, Programming Languages, Continuation of programming language principles. Further study of programming language paradigms such as functional and logic; additional programming language paradigms such as concurrent (parallel); key implementation issues for those paradigms; and programming language semantics.,True,"['programming', 'paradigms', 'concurrent', 'implementation', 'principles', 'semantics', 'continuation', 'language', 'parallel', 'functional']"
ECS 142, Compilers," Principles and techniques of lexical analysis, parsing, semantic analysis, code generation, and code optimization. Implementation of compilers.",True,"['compilers', 'parsing', 'lexical', 'implementation', 'code', 'semantic', 'analysis', 'optimization', 'principles', 'techniques']"
ECS 145, Scripting Languages & Their Applications," Goals and philosophy of scripting languages, with Python and R as prime examples. Applications include networking, data analysis and display, and graphical user interfaces (GUIs).",True,"['scripting', 'python', 'languages', 'applications', 'guis', 'graphical', 'interfaces', 'examples', 'analysis', 'goals']"
ECS 150, Operating Systems & System Programming," Basic concepts of operating systems and system programming. Processes and interprocess communication/synchronization; virtual memory, program loading and linking; file and I/O subsystems; utility programs. Study of a real operating system.",True,"['interprocess', 'programming', 'programs', 'program', 'processes', 'systems', 'operating', 'system', 'subsystems', 'basic']"
ECS 152A, Computer Networks," Overview of computer networks, TCP/IP protocol suite, computer-networking applications and protocols, transport-layer protocols, network architectures, Internet Protocol (IP), routing, link-layer protocols, local area and wireless networks, medium access control, physical aspects of data transmission, and network-performance analysis.",True,"['tcp', 'protocols', 'protocol', 'networking', 'ip', 'network', 'overview', 'internet', 'routing', 'networks']"
ECS 152B, Computer Networks," TCP/IP protocol suite, computer networking applications, client-server and peer-to-peer architectures, application-layer protocols, transport-layer protocols, transport-layer interfaces, sockets, network programming, remote procedure calls, and network management.",True,"['protocols', 'tcp', 'protocol', 'sockets', 'networking', 'applications', 'ip', 'server', 'network', 'application']"
ECS 152C, Advanced Topics in Computer Networks," Advanced topics in computer networks, wireless networks, multimedia networking, traffic analysis and modeling,  network design and management, network simulation and performance analysis, and design projects in communication networks.",True,"['networking', 'network', 'multimedia', 'networks', 'traffic', 'topics', 'wireless', 'advanced', 'communication', 'simulation']"
ECS 153, Computer Security," Principles, mechanisms, and implementation of computer security and data protection. Policy, encryption and authentication, access control, and integrity models and mechanisms; network security; secure systems; programming and vulnerabilities analysis. Study of an existing operating system.",True,"['security', 'encryption', 'authentication', 'secure', 'vulnerabilities', 'protection', 'implementation', 'integrity', 'access', 'principles']"
ECS 154A, Computer Architecture," Introduction to digital design. Interfacing of devices for I/O, memory and memory management. Input/output programming, via wait loops, hardware interrupts and calls to operating system services. Hardware support for operating systems software.",True,"['hardware', 'interrupts', 'digital', 'devices', 'software', 'programming', 'design', 'systems', 'memory', 'operating']"
ECS 154B, Computer Architecture, Hardwired and microprogrammed CPU design. Memory hierarchies. Uniprocessor performance analysis under varying program mixes. Introduction to pipelining and multiprocessors.,True,"['multiprocessors', 'uniprocessor', 'pipelining', 'cpu', 'microprogrammed', 'hardwired', 'memory', 'performance', 'hierarchies', 'design']"
ECS 158, Programming on Parallel Architectures," Techniques for software development using the shared-memory and message-passing paradigms, on parallel architectures and networks of workstations. Locks, barriers, and other techniques for synchronization. Introduction to parallel algorithms.",True,"['synchronization', 'parallel', 'workstations', 'software', 'shared', 'architectures', 'algorithms', 'development', 'locks', 'memory']"
ECS 160,  Software Engineering," Requirements, specification, design, implementation, testing, and verification of large software systems. Study and use of software engineering methodologies.",True,"['software', 'specification', 'requirements', 'engineering', 'systems', 'methodologies', 'implementation', 'testing', 'design', 'verification']"
ECS 161, Modern Programming Tools, Concepts and practice of collaborative software development using modern software tools.,True,"['collaborative', 'software', 'development', 'tools', 'modern', 'concepts', 'using', 'practice', 'and', 'of']"
ECS 162, Web Programming," Technical aspects of building websites, including both server-side and client-side software development.",True,"['development', 'server', 'client', 'building', 'websites', 'technical', 'software', 'aspects', 'side', 'including']"
ECS 163, Information Interfaces," Art and science of information visualization and interfaces for information systems. Design principles of human-computer interaction. Visual display and navigation of nonspatial and higher dimensional data. Implementations, performance issues, tradeoffs, and evaluation of interactive information systems.",True,"['visualization', 'interactive', 'information', 'visual', 'display', 'design', 'data', 'navigation', 'interfaces', 'interaction']"
ECS 164, Human-Computer Interaction, Introduction to concepts and practice of modern human-computer interaction design.,True,"['design', 'interaction', 'modern', 'introduction', 'concepts', 'human', 'practice', 'and', 'of', 'to']"
ECS 165A, Database Systems," Database modeling and design (E/R model, relational model), relational algebra, query languages (SQL), file and index structures, query processing, transaction management.",True,"['database', 'sql', 'relational', 'modeling', 'model', 'processing', 'languages', 'management', 'algebra', 'transaction']"
ECS 165B, Database Systems," Data modeling (object-relational, graph-based, spatiotemporal models). Querying semistructured data (XML). Database theory (normalization, integration, provenance). Database programming (stored procedures, embedded SQL, web programming). Advanced topics (data warehousing, parallel data processing).",True,"['database', 'modeling', 'semistructured', 'programming', 'xml', 'sql', 'data', 'querying', 'relational', 'models']"
ECS 170, Introduction to Artificial Intelligence, Design and implementation of intelligent computer systems. Knowledge representation and organization. Memory and inference. Problem solving. Natural language processing.,True,"['systems', 'processing', 'knowledge', 'implementation', 'design', 'intelligent', 'organization', 'language', 'inference', 'memory']"
ECS 171, Machine Learning," Introduction to machine learning. Supervised & unsupervised learning, including classification, dimensionality reduction, regression & clustering using modern machine learning methods. Applications of machine learning to other fields.",True,"['classification', 'clustering', 'supervised', 'learning', 'unsupervised', 'regression', 'dimensionality', 'applications', 'introduction', 'methods']"
ECS 172, Recommender Systems," Collaborative filtering and content-based methods for building recommender systems. Statistical, matrix factorization, textual analysis, and nearest-neighbor approaches. Case studies.",True,"['recommender', 'factorization', 'collaborative', 'filtering', 'matrix', 'content', 'based', 'textual', 'building', 'approaches']"
ECS 173, Image Processing & Analysis," Techniques for automated extraction of high-level information from images generated by cameras, three-dimensional surface sensors, and medical devices. Typical applications include detection of objects in various types of images and describing populations of biological specimens appearing in medical imagery.",True,"['images', 'cameras', 'extraction', 'detection', 'imagery', 'specimens', 'objects', 'automated', 'sensors', 'devices']"
ECS 174, Computer Vision," Computer vision is the study of enabling machines to ""see"" the visual world; e.g., understand images and videos. Explores several fundamental topics in the area, including feature detection, grouping and segmentation, and recognition.",True,"['recognition', 'segmentation', 'vision', 'detection', 'images', 'visual', 'feature', 'videos', 'machines', 'grouping']"
ECS 175, Computer Graphics," Principles of computer graphics, with a focus on interactive systems. Current graphics hardware, elementary operations in two-and three-dimensional space, geometric transformations, camera models and interaction, graphics system design, standard graphics APIs, individual projects.",True,"['graphics', 'interactive', 'geometric', 'systems', 'principles', 'hardware', 'design', 'interaction', 'system', 'transformations']"
ECS 177, Scientific Visualization," Computer graphics techniques for generating images of various types of measured or computer-simulated data. Typical applications for these graphics techniques include study of air flows around car bodies, medical data, and molecular structures.",True,"['graphics', 'images', 'simulated', 'applications', 'techniques', 'data', 'flows', 'air', 'structures', 'bodies']"
ECS 178, Geometric Modeling," Interactive graphics techniques for defining and manipulating geometrical shapes used in computer animation, car body design, aircraft design, and architectural design.",True,"['animation', 'graphics', 'shapes', 'interactive', 'geometrical', 'design', 'architectural', 'aircraft', 'techniques', 'manipulating']"
ECS 179, Gameplay Programming," Developing gameplay systems in the context of game design and software engineering. Aspects of technical game development that depend on the genre or details of a specific game design, thus making them difficult to abstract and engineer into game engines.",True,"['gameplay', 'development', 'game', 'systems', 'software', 'design', 'developing', 'technical', 'engineering', 'genre']"
ECS 188, Ethics in an Age of Technology, Foundations of ethics. Views of technology. Technology and human values. Costs and benefits of technology. Character of technological change. Social context of work in computer science and engineering.,True,"['technology', 'technological', 'ethics', 'engineering', 'social', 'foundations', 'science', 'values', 'work', 'benefits']"
ECS 189A, Special Topics in Computer Science: Computer Science Theory, Special topic in Computer Science Theory.,True,"['topic', 'theory', 'science', 'special', 'in']"
ECS 189B, Special Topics in Computer Science: Architecture, Special topic in Architecture.,True,"['architecture', 'topic', 'special', 'in']"
ECS 189C, Special Topics in Computer Science: Programming Languages & Compilers, Special topic in Programming Languages & Compilers.,True,"['compilers', 'programming', 'languages', 'topic', 'special', 'in']"
ECS 189D, Special Topics in Computer Science: Operating Systems, Special topic in Operating Systems.,True,"['operating', 'systems', 'topic', 'special', 'in']"
ECS 189E, Special Topics in Computer Science: Software Engineering, Special topic in software engineering.,True,"['topic', 'software', 'engineering', 'special', 'in']"
ECS 189F, Special Topics in Computer Science: Databases, Special topic Databases.,True,"['databases', 'topic', 'special']"
ECS 189G, Special Topics in Computer Science: Artificial Intelligence, Special topic in Artificial Intelligence.,True,"['topic', 'artificial', 'intelligence', 'special', 'in']"
ECS 189H, Special Topics in Computer Science: Computer Graphics, Special topic in Computer Graphics.,True,"['graphics', 'topic', 'special', 'in']"
ECS 189I, Special Topics in Computer Science: Networks, Special topic in Networks.,True,"['networks', 'topic', 'special', 'in']"
ECS 189J, Special Topics in Computer Science: Computer-Aided Design, Special topic in Computer-Aided Design.,True,"['design', 'topic', 'aided', 'special', 'in']"
ECS 189K, Special Topics in Computer Science: Scientific Computing, Special topic in Scientific Computing.,True,"['computing', 'topic', 'scientific', 'special', 'in']"
ECS 189L, Special Topics in Computer Science: Computer Science, Special topic in Computer Science.,True,"['topic', 'science', 'special', 'in']"
ECS 189M, Special Topics in Computer Security: Computer Security, Special topics in Computer Security.,True,"['security', 'topics', 'special', 'in']"
ECS 189N, Special Topics in Bioinformatics & Computational Biology, Special topics in Bioinformatics & Computational Biology.,True,"['bioinformatics', 'biology', 'topics', 'computational', 'in', 'special']"
ECS 190C, Research Group Conferences in Computer Science, Research group conferences.,True,"['conferences', 'research', 'group']"
ECS 190X, Senior Seminar, Examination of a special topic in a small group setting.,True,"['topic', 'group', 'examination', 'special', 'small', 'setting', 'in', 'of']"
ECS 191, Software Design Project," Student teams plan, implement, and evaluate large-scale projects involving computer and computational systems. Project proposed and supervised by a faculty member.",True,"['projects', 'computational', 'project', 'systems', 'teams', 'supervised', 'proposed', 'implement', 'plan', 'member']"
ECS 192, Internship in Computer Science, Supervised work experience in computer science.,True,"['supervised', 'experience', 'work', 'science', 'in']"
ECS 193A, Capstone Project," Responding to real-life client design challenges, student teams plan, implement, and evaluate large-scale projects involving computer and computational systems. Project supervised by a faculty member. Must take ECS 193A & ECS 193B to receive credit.",True,"['ecs', 'projects', '193b', 'computational', '193a', 'project', 'systems', 'design', 'client', 'credit']"
ECS 193B, Capstone Project," Responding to real-life client design challenges, student teams plan, implement, and evaluate large-scale projects involving computer and computational systems. Project supervised by a faculty member. Must take ECS 193A & ECS 193B to receive credit.",True,"['ecs', 'projects', '193b', 'computational', '193a', 'project', 'systems', 'design', 'client', 'credit']"
ECS 197T, Tutoring in Computer Science," Tutoring in computer science courses, especially introductory courses.",True,"['tutoring', 'introductory', 'science', 'in', 'especially']"
ECS 198, Directed Group Study, Directed group study.,True,"['group', 'study', 'directed']"
ECS 198F, Student Facilitated Course, Student facilitated course intended primarily for upper division students.,True,"['students', 'facilitated', 'division', 'primarily', 'course', 'upper', 'for', 'intended']"
ECS 199, Special Study for Advanced Undergraduates, Special study for advanced undergraduates.,True,"['undergraduates', 'study', 'advanced', 'special', 'for']"
ECS 199FA, Student Facilitated Course Development," Under the supervision of a faculty member, an undergraduate student plans and develops the course they will offer under 098F/198F.",True,"['098f', 'undergraduate', '198f', 'plans', 'supervision', 'under', 'develops', 'member', 'offer', 'course']"
ECS 199FB, Student Facilitated Teaching," STU FAC. Under the supervision of a faculty member, an undergraduate student teaches a course under 098F/198F.",True,"['teaches', 'undergraduate', 'fac', 'stu', 'supervision', '098f', 'under', '198f', 'member', 'course']"
